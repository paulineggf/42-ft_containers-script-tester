==21673== Memcheck, a memory error detector
==21673== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21673== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21673== Command: ./mytest
==21673== 
==21673== Invalid read of size 8
==21673==    at 0x4011E1: ft::list<int, std::allocator<int> >::iterator::operator++() (listIterators.hpp:34)
==21673==    by 0x401753: ft::list<int, std::allocator<int> >::iterator::operator++(int) (listIterators.hpp:26)
==21673==    by 0x400E9C: void ft::list<int, std::allocator<int> >::remove_if<bool (*)(int const&)>(bool (*)(int const&)) (listOperations.hpp:46)
==21673==    by 0x400A82: main (remove_if.cpp:19)
==21673==  Address 0x5b7dd50 is 16 bytes inside a block of size 24 free'd
==21673==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21673==    by 0x401688: ft::list<int, std::allocator<int> >::erase(ft::list<int, std::allocator<int> >::iterator) (listModifiers.hpp:215)
==21673==    by 0x400E1C: void ft::list<int, std::allocator<int> >::remove_if<bool (*)(int const&)>(bool (*)(int const&)) (listOperations.hpp:51)
==21673==    by 0x400A82: main (remove_if.cpp:19)
==21673==  Block was alloc'd at
==21673==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21673==    by 0x401452: ft::list<int, std::allocator<int> >::push_back(int const&) (listModifiers.hpp:11)
==21673==    by 0x4012CE: void ft::list<int, std::allocator<int> >::assign<int*>(int*, int*) (listModifiers.hpp:68)
==21673==    by 0x400CDF: ft::list<int, std::allocator<int> >::list<int*>(int*, int*, std::allocator<int> const&) (listInit.hpp:27)
==21673==    by 0x400A64: main (remove_if.cpp:17)
==21673== 
==21673== Invalid read of size 8
==21673==    at 0x4011E1: ft::list<int, std::allocator<int> >::iterator::operator++() (listIterators.hpp:34)
==21673==    by 0x401753: ft::list<int, std::allocator<int> >::iterator::operator++(int) (listIterators.hpp:26)
==21673==    by 0x401045: void ft::list<int, std::allocator<int> >::remove_if<is_odd>(is_odd) (listOperations.hpp:46)
==21673==    by 0x400A90: main (remove_if.cpp:21)
==21673==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==21673==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21673==    by 0x401688: ft::list<int, std::allocator<int> >::erase(ft::list<int, std::allocator<int> >::iterator) (listModifiers.hpp:215)
==21673==    by 0x400FC5: void ft::list<int, std::allocator<int> >::remove_if<is_odd>(is_odd) (listOperations.hpp:51)
==21673==    by 0x400A90: main (remove_if.cpp:21)
==21673==  Block was alloc'd at
==21673==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21673==    by 0x4013EE: ft::list<int, std::allocator<int> >::push_back(int const&) (listModifiers.hpp:7)
==21673==    by 0x4012CE: void ft::list<int, std::allocator<int> >::assign<int*>(int*, int*) (listModifiers.hpp:68)
==21673==    by 0x400CDF: ft::list<int, std::allocator<int> >::list<int*>(int*, int*, std::allocator<int> const&) (listInit.hpp:27)
==21673==    by 0x400A64: main (remove_if.cpp:17)
==21673== 
==21673== Invalid read of size 8
==21673==    at 0x401374: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:100)
==21673==    by 0x401208: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==21673==    by 0x400C2A: main (remove_if.cpp:29)
==21673==  Address 0x5b7dcf0 is 16 bytes inside a block of size 24 free'd
==21673==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21673==    by 0x40136F: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:99)
==21673==    by 0x401208: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==21673==    by 0x400C2A: main (remove_if.cpp:29)
==21673==  Block was alloc'd at
==21673==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21673==    by 0x401452: ft::list<int, std::allocator<int> >::push_back(int const&) (listModifiers.hpp:11)
==21673==    by 0x4012CE: void ft::list<int, std::allocator<int> >::assign<int*>(int*, int*) (listModifiers.hpp:68)
==21673==    by 0x400CDF: ft::list<int, std::allocator<int> >::list<int*>(int*, int*, std::allocator<int> const&) (listInit.hpp:27)
==21673==    by 0x400A64: main (remove_if.cpp:17)
==21673== 
==21673== 
==21673== HEAP SUMMARY:
==21673==     in use at exit: 0 bytes in 0 blocks
==21673==   total heap usage: 10 allocs, 10 frees, 81,088 bytes allocated
==21673== 
==21673== All heap blocks were freed -- no leaks are possible
==21673== 
==21673== For counts of detected and suppressed errors, rerun with: -v
==21673== ERROR SUMMARY: 8 errors from 3 contexts (suppressed: 0 from 0)
