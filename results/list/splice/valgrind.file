==21632== Memcheck, a memory error detector
==21632== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21632== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21632== Command: ./mytest
==21632== 
==21632== Invalid read of size 8
==21632==    at 0x401594: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:100)
==21632==    by 0x401488: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==21632==    by 0x400F25: main (splice.cpp:49)
==21632==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==21632==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21632==    by 0x40158F: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:99)
==21632==    by 0x401488: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==21632==    by 0x400F25: main (splice.cpp:49)
==21632==  Block was alloc'd at
==21632==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21632==    by 0x40105E: ft::list<int, std::allocator<int> >::push_back(int const&) (listModifiers.hpp:7)
==21632==    by 0x400A8C: main (splice.cpp:13)
==21632== 
==21632== 
==21632== HEAP SUMMARY:
==21632==     in use at exit: 0 bytes in 0 blocks
==21632==   total heap usage: 12 allocs, 12 frees, 81,136 bytes allocated
==21632== 
==21632== All heap blocks were freed -- no leaks are possible
==21632== 
==21632== For counts of detected and suppressed errors, rerun with: -v
==21632== ERROR SUMMARY: 7 errors from 1 contexts (suppressed: 0 from 0)
