==22070== Memcheck, a memory error detector
==22070== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22070== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==22070== Command: ./mytest
==22070== 
==22070== Invalid read of size 8
==22070==    at 0x401654: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:100)
==22070==    by 0x401478: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::clear() (mapModifiers.hpp:82)
==22070==    by 0x400C70: main (clear.cpp:18)
==22070==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==22070==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==22070==    by 0x40164F: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:99)
==22070==    by 0x401478: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::clear() (mapModifiers.hpp:82)
==22070==    by 0x400C70: main (clear.cpp:18)
==22070==  Block was alloc'd at
==22070==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==22070==    by 0x401AFE: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::push_back(ft::pair<char, int> const&) (listModifiers.hpp:7)
==22070==    by 0x4018E0: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::insert(ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::iterator, ft::pair<char, int> const&) (listModifiers.hpp:113)
==22070==    by 0x401252: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::operator[](char const&) (mapAcces.hpp:14)
==22070==    by 0x400A41: main (clear.cpp:10)
==22070== 
==22070== Invalid read of size 8
==22070==    at 0x401654: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:100)
==22070==    by 0x4015A8: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::~list() (listInit.hpp:41)
==22070==    by 0x4014A2: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::~map() (map.hpp:141)
==22070==    by 0x400E73: main (clear.cpp:27)
==22070==  Address 0x5b7fdf0 is 16 bytes inside a block of size 24 free'd
==22070==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==22070==    by 0x40164F: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:99)
==22070==    by 0x4015A8: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::~list() (listInit.hpp:41)
==22070==    by 0x4014A2: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::~map() (map.hpp:141)
==22070==    by 0x400E73: main (clear.cpp:27)
==22070==  Block was alloc'd at
==22070==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==22070==    by 0x401AFE: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::push_back(ft::pair<char, int> const&) (listModifiers.hpp:7)
==22070==    by 0x4018E0: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::insert(ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::iterator, ft::pair<char, int> const&) (listModifiers.hpp:113)
==22070==    by 0x401252: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::operator[](char const&) (mapAcces.hpp:14)
==22070==    by 0x400C86: main (clear.cpp:19)
==22070== 
==22070== 
==22070== HEAP SUMMARY:
==22070==     in use at exit: 0 bytes in 0 blocks
==22070==   total heap usage: 7 allocs, 7 frees, 81,016 bytes allocated
==22070== 
==22070== All heap blocks were freed -- no leaks are possible
==22070== 
==22070== For counts of detected and suppressed errors, rerun with: -v
==22070== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 0 from 0)
