==21877== Memcheck, a memory error detector
==21877== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21877== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21877== Command: ./mytest
==21877== 
==21877== Invalid read of size 8
==21877==    at 0x401634: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:100)
==21877==    by 0x401588: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::~list() (listInit.hpp:41)
==21877==    by 0x401482: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::~map() (map.hpp:141)
==21877==    by 0x400D09: main (value_comp.cpp:24)
==21877==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==21877==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21877==    by 0x40162F: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:99)
==21877==    by 0x401588: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::~list() (listInit.hpp:41)
==21877==    by 0x401482: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::~map() (map.hpp:141)
==21877==    by 0x400D09: main (value_comp.cpp:24)
==21877==  Block was alloc'd at
==21877==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==21877==    by 0x4019EE: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::push_back(ft::pair<char, int> const&) (listModifiers.hpp:7)
==21877==    by 0x401800: ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::insert(ft::list<ft::pair<char, int>, std::allocator<ft::pair<char, int> > >::iterator, ft::pair<char, int> const&) (listModifiers.hpp:113)
==21877==    by 0x401102: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char, int> > >::operator[](char const&) (mapAcces.hpp:14)
==21877==    by 0x400A41: main (value_comp.cpp:10)
==21877== 
==21877== 
==21877== HEAP SUMMARY:
==21877==     in use at exit: 0 bytes in 0 blocks
==21877==   total heap usage: 5 allocs, 5 frees, 80,968 bytes allocated
==21877== 
==21877== All heap blocks were freed -- no leaks are possible
==21877== 
==21877== For counts of detected and suppressed errors, rerun with: -v
==21877== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 0 from 0)
